.visualization {
  height: 100%;
  position: relative;
}
.content {
  height: 100%;
  width: 100%;
  overflow: auto;
  padding: 1em 1em;
  display: flex;

  // for auto scrolling
  position: relative;
  // neccessary for border
  display: flex;
  // the default value is stretch, undesirable
  align-items: flex-start;

  // * { .ease-out(); }
}

.controls {
  right: 0;
  position: absolute;
  bottom: 1em;
}

.ruleLabelStyle {
  background-color: @grey-400;
}

.rule {
  // padding: 0.5em 0;

  color: @grey-900;
  display: flex;
  // flex-wrap: nowrap;

  .monoFont;
  font-size: 12px;

  flex: 0 0 auto;
  // align-items: baseline;

  .label {
    // height: 100%;

    background-color: @grey-200;
    box-sizing: border-box;
    display: block;
    // margin: 1px 0;
    position: relative;
    // text-align: center;
    // z-index: 0;
    flex: 0 0 auto;

    .goals {

      .currentGoal {
        // border: 2px dashed @grey-500;
      }
      .currentGoal.highlight {
        .highlightRuleBefore;
      }
      .currentGoal.highlight.unificationSucceeded {
        .highlightRuleSuccess;
      }
      .currentGoal.highlight.unificationFailed {
        .highlightRuleFailure;
      }

      .latestGoals {
        margin-right: 1em;
        // display: flex;

        background-color: @dark-white;
        .ruleLabelStyle;
      }
      .latestGoals.highlight {
        .highlightRuleSuccess;
      }

      // .currentGoal:not(:only-child)::after {
      //   content: ", "
      // }

      // .notFirstGoal:not(:nth-last-child(1)):not(:only-child)::after {
      //   content: ", "
      // }

    }

  }

  .label.solution {
    color: @green-600;
  }

  .rule.failed > .label {
    background-color: rgba(219, 82, 75, 0.6);
    border-right: 1px solid rgb(219, 82, 75);
    border-left: 1px solid rgb(219, 82, 75);
  }


  .ruleLabels {
    flex: 0 0 auto;
    display: flex;
    flex-direction: column;

    .childRuleAndChildGoal+.childRuleAndChildGoal {
      margin-top: 2px;
    }
    .childRuleAndChildGoal {
      flex: 0 0 auto;
      display: flex;
      align-items: baseline;

      .ruleLabel {
        flex: 0 0 auto;
        .ruleLabelStyle;
      }

      .ruleLabel.highlight {
        .highlightRuleBefore;
      }
      .ruleLabel.highlight.unificationSucceeded {
        // background-color: @yellow-300;
        .highlightRuleSuccess;

        .errorMsg {
          .highlightRuleSuccess;
          color: @deep-orange-900;
        }
      }
      .ruleLabel.highlight.unificationFailed {
        .highlightRuleFailure;
      }

      .ruleLabel.shouldCross {
        text-decoration: line-through;
      }

    }

  }



  // counter
  // counter-reset: step-counter;
  // .labelChild::before {
  //     content: counter(step-counter);
  //     counter-increment: step-counter;
  //     margin-right: 5px;
  //     font-size: 80%;
  // }
}

.rule.currentEnv {
  border: 2px dashed @grey-500;
}
.rule.nothing {
  display: none;
}


// .rule + .rule {
//   margin-top: 0.5em;
// }

@selectionColor: #B5D5FF;
.highlightRuleSuccess {
  background-color: @light-green-300;
}
.highlightRuleFailure {
  background-color: @red-200;
}
.highlightRuleBefore {
  background-color: @yellow-200;
}

.highlightApplication {
  background-color: CornflowerBlue;
  color: white;
}



// styles for the d3 tree
.tooltip {
  font-family: "Lucida Console", Monaco, monospace;
}
.feedback-tree {
  // overflow: auto;
  position: relative;
  font-family: "Lucida Console", Monaco, monospace;
}
.node .current {
  stroke: steelblue;
  stroke-width: 10px !important;
}
.node .circle {
  stroke: steelblue;
  stroke-width: 1px;
}
.node text {
  font-family: "Lucida Console", Monaco, monospace;
  max-width: 100px;
}
.link {
    fill: none;
    stroke: #aaa;
    stroke-width: 2px;
}
