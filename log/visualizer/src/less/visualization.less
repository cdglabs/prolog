.visualization {
  height: 100%;
  position: relative;
}
.content {
  height: 100%;
  width: 100%;
  overflow: auto;
  padding: 1em 1em;
  display: flex;

  // for auto scrolling
  position: relative;
  // neccessary for border
  display: flex;
  // the default value is stretch, undesirable
  align-items: flex-start;

  // * { .ease-out(); }
}

.controls {
  right: 0;
  position: absolute;
  bottom: 1em;
}

.rule {
  .goals {
    // padding: 0.5em;
    // display: flex;
    .currentGoal {
      background-color: @grey-300;
    }
  }

  // align the top edge
  // vertical-align: middle;

  // cursor: pointer;
  color: @grey-900;
  display: flex;
  // flex-wrap: nowrap;

  .monoFont;
  font-size: 12px;
  // overflow: auto;

  flex: 0 0 auto;


  .rule.failed > .label {
    background-color: rgba(219, 82, 75, 0.6);
    border-right: 1px solid rgb(219, 82, 75);
    border-left: 1px solid rgb(219, 82, 75);
  }

  .ruleLabel {
    flex: 0 0 auto;
    // display: block;

  }

  .labelWrapper {
    flex: 0 0 auto;
  }

  .ruleLabels {
    flex: 0 0 auto;

    display: flex;
    flex-direction: column;

  }


  .label {
    // background-color: #efefef;
    // border-left: 1px solid #ccc;
    // border-right: 1px solid #ccc;
    box-sizing: border-box;
    display: block;
    // margin: 1px 0;
    padding: 1px 2px 1px 2px;
    position: relative;
    // text-align: center;
    z-index: 0;
    word-wrap: nowrap;
    flex: 0 0 auto;



  }

  .label.solution {
    color: @green-600;
  }

  .label:after {
    background-color: @grey-200;
    content: '';
    display: block;
    position: absolute;
    top: 1px;
    left: 1px;
    right: 1px;
    bottom: 1px;
    z-index: -1;
  }
  .label:hover:after {
    background-color: @grey-300;
  }

  .currentGoal.highlight {
    .highlightRuleBefore;
  }
  .currentGoal.highlight.unificationSucceeded {
    .highlightRuleSuccess;
  }
  .currentGoal.highlight.unificationFailed {
    .highlightRuleFailure;
  }

  .ruleLabel.highlight {
    .highlightRuleBefore;
  }
  .ruleLabel.highlight.unificationSucceeded {
    // background-color: @yellow-300;
    .highlightRuleSuccess;

    .errorMsg {
      .highlightRuleSuccess;
      color: @deep-orange-900;
    }
  }
  .ruleLabel.highlight.unificationFailed {
    .highlightRuleFailure;
  }

  .ruleLabel.shouldCross {
    text-decoration: line-through;
  }

  .children {
    flex: 0 0 auto;

    display: flex;
    // flex-direction: column;
    // flex: 1;
  }
  .children[hidden] {
    display: none;
  }
  .childrenCSSTransitionGroup {
    flex: 0 0 auto;


    display: flex;
    flex-direction: column;
    // align-items: stretch;

  }

  .labelChild {
    flex: 0 0 auto;
    display: flex;
  }

  // counter
  // counter-reset: step-counter;
  // .labelChild::before {
  //     content: counter(step-counter);
  //     counter-increment: step-counter;
  //     margin-right: 5px;
  //     font-size: 80%;
  // }

}

.rule.currentEnv {
  border: 2px dashed @grey-500;
}
.rule.nothing {
  display: none;
}


// .rule + .rule {
//   margin-top: 0.5em;
// }

@selectionColor: #B5D5FF;
.highlightRuleSuccess {
  background-color: @light-green-300;
}
.highlightRuleFailure {
  background-color: @red-200;
}
.highlightRuleBefore {
  background-color: @yellow-200;
}

.highlightApplication {
  background-color: CornflowerBlue;
  color: white;
}
.dimRule {
  opacity: 0.5;
}


// styles for the d3 tree
.tooltip {
  font-family: "Lucida Console", Monaco, monospace;
}
.feedback-tree {
  // overflow: auto;
  position: relative;
  font-family: "Lucida Console", Monaco, monospace;
}
.node .current {
  stroke: steelblue;
  stroke-width: 10px !important;
}
.node .circle {
  stroke: steelblue;
  stroke-width: 1px;
}
.node text {
  font-family: "Lucida Console", Monaco, monospace;
  max-width: 100px;
}
.link {
    fill: none;
    stroke: #aaa;
    stroke-width: 2px;
}
